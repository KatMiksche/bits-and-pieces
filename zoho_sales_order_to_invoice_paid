/* ZOHO CUSTOM FUNCTION
confirmed sales order --> invoice --> manual payment to bank account
made by Katarina Miksche, email: kate.rusnak.kr@gmail.com 
*/

void so_invoice_payment(Map salesorder, Map organization, Map user) {


/* confirmed sales order --> invoice --> manual payment to bank account
FUNCTION ONLY FOR SALES ORDERS WITH DISCOUNT ON ENTITY LEVEL
!! hardcoded account ID
possibly not considering tax
triggering when sales orders is confirmed
made by Katarina Miksche, email: kate.rusnak.kr@gmail.com 
*/
//
// hardcode bank account ID
accountID = "342388000001142005";
// reading sales order
salesorderID = salesorder.get("salesorder_id");
customerID = salesorder.get("customer_id");
salesorderdate = salesorder.get("date").toString();
organizationID = organization.get("organization_id");
salesorderDetails = zoho.books.getRecordsByID("Salesorders",organizationID,salesorderID,"zbooks").get("salesorder");
//info salesorderDetails;
lineItem = salesorderDetails.get("line_items");
//info lineItem;
discamount = salesorderDetails.get("discount_amount");
SO_number = salesorderDetails.get("salesorder_number");
SO_number = "INV-" + SO_number;
//
// reading items from sales order
itemList = List();
for each  find in lineItem
{
	imap = Map();
	itemID = find.get("item_id");
	rate = find.get("rate");
	itemTaxID = find.get("tax_id");
	//discount = find.get("discount");
	quantity = find.get("quantity");
	imap.put("item_id",itemID);
	imap.put("salesorder_item_id",find.get("line_item_id"));
	imap.put("tax_id",itemTaxID);
	imap.put("quantity",quantity);
	itemList.add(imap);
}
//
// mapping info for invoice
params = Map();
params.put("customer_id",customerID);
params.put("date",salesorderdate);
params.put("discount",discamount);
params.put("discount_type","entity_level");
params.put("invoice_number",SO_number);
params.put("line_items",itemList);
//info params.toMap();
//
// creating invoice
invResult = zoho.books.createRecord("Invoices",organizationID,params.toMap(),"zbooks");
info invResult.get("message");
//
// storing new invoice data
invoice = invResult.get("invoice");
invoiceID = invoice.get("invoice_id");
total_inv = invoice.get("total");
info invoiceID;
info total_inv;
invoice_number = invoice.get("invoice_number");
//
// marking invoice as sent - not required
//response = zoho.books.markStatus("Invoices",organizationID,invoiceID,"sent","zbooks");
//info response;
//
// mapping data for payment
params = Map();
params.put("customer_id",customerID);
params.put("payment_mode","Bank Transfer");
params.put("date",invoice.get("date").toString());
params.put("account_id",accountID);
params.put("amount",total_inv);
params.put("reference_number",invoice_number);
params.put("invoices",{{"invoice_id":invoiceID,"amount_applied":total_inv}});
//info params.toMap();
//
// creating payment
invResult = zoho.books.createRecord("Customerpayments",organizationID,params.toMap(),"zbooks");
info invResult.get("message"); }
